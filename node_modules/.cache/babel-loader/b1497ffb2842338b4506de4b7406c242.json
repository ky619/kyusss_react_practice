{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ky619\\\\react2\\\\src\\\\components\\\\Movie.js\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Movie(_ref) {\n  let {\n    coverImg,\n    title,\n    summary,\n    genres\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverImg,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: g\n      }, g, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Movie;\nMovie.propTypes = {\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["PropTypes","Movie","coverImg","title","summary","genres","map","g","propTypes","string","isRequired","arrayOf"],"sources":["C:/Users/ky619/react2/src/components/Movie.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nfunction Movie({coverImg, title, summary, genres}){\r\n    return (\r\n    <div>\r\n    <img src = {coverImg} alt={title}/>\r\n    <h2>{title}</h2>\r\n    <p>{summary}</p>\r\n    <ul>\r\n      {genres.map((g) => (\r\n        <li key={g}>{g}</li>\r\n        ))}\r\n    </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    coverImg : PropTypes.string.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,KAAT,OAAkD;EAAA,IAAnC;IAACC,QAAD;IAAWC,KAAX;IAAkBC,OAAlB;IAA2BC;EAA3B,CAAmC;EAC9C,oBACA;IAAA,wBACA;MAAK,GAAG,EAAIH,QAAZ;MAAsB,GAAG,EAAEC;IAA3B;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA;MAAA,UACGC,MAAM,CAACC,GAAP,CAAYC,CAAD,iBACV;QAAA,UAAaA;MAAb,GAASA,CAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAYH;;KAbQN,K;AAeTA,KAAK,CAACO,SAAN,GAAkB;EACdN,QAAQ,EAAGF,SAAS,CAACS,MAAV,CAAiBC,UADd;EAEdP,KAAK,EAAGH,SAAS,CAACS,MAAV,CAAiBC,UAFX;EAGdN,OAAO,EAAGJ,SAAS,CAACS,MAAV,CAAiBC,UAHb;EAIdL,MAAM,EAAGL,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACS,MAA5B,EAAoCC;AAJ/B,CAAlB;AAOA,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}